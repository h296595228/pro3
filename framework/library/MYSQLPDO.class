<?php
//PDO MySQL类
class MySQLPDO {
	protected static $db = null;	//保存PDO实例
	//构造方法
	public function __construct(){
		self::$db || self::_connect();
	}
	//阻止克隆
	private function __clone() {}
	//连接目标服务器
	private static function _connect(){
		//准备数据库配置
		$config = C('DB_CONFIG');
		//准备PDO的DSN连接信息
		$dsn = "{$config['db']}:host={$config['host']};port={$config['port']};dbname={$config['dbname']};charset={$config['charset']}";
		try{
			//实例化PDO
			self::$db = new PDO($dsn,$config['user'], $config['pass']);
		}catch (PDOException $e){
			//连接失败
			if(APP_DEBUG){
				E('数据库连接失败：'.$e->getMessage());
			}else{
				E('数据库连接失败');
			}
		}
	}
	/**
	 * 通过预处理方式执行SQL
	 * @param string $sql 执行的SQL语句模板
	 * @param array $data 数据部分
	 * @return object PDOStatement
	 */
	public function query($sql, $data=[]){
		//通过预处理方式执行SQL
		$stmt = self::$db->prepare($sql);
		//自动转换为二维数组
		is_array(current($data)) || $data = [$data]; 
		//批量执行
		foreach($data as $v){
			if(false === $stmt->execute($v)){
				if(APP_DEBUG){
					E('数据库操作失败：'.implode('-',$stmt->errorInfo())."\nSQL语句：".$sql);
				}else{
					E('数据库操作失败');
				}
			}
		}
		return $stmt;
	}
	//执行SQL-写操作（支持批量操作，返回受影响的行数）
	public function exec($sql, $data=[]){
		return $this->query($sql, $data)->rowCount();
	}
	//取得一行结果
	public function fetchRow($sql, $data=[]){
		return $this->query($sql, $data)->fetch(PDO::FETCH_ASSOC);
	}
	//取得所有结果
	public function fetchAll($sql, $data=[]){
		return $this->query($sql, $data)->fetchAll(PDO::FETCH_ASSOC);
	}
	//取得一列结果
	public function fetchColumn($sql, $data=[]){
		return $this->query($sql, $data)->fetchColumn();
	}
	//最后插入的ID
	public function lastInsertId(){
		return self::$db->lastInsertId();
	}
